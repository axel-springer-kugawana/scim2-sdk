package dev.axelspringerkugawana.scim2.schema.data.sp;

import dev.axelspringerkugawana.scim2.schema.data.Attribute;
import dev.axelspringerkugawana.scim2.schema.data.AttributeSet;
import lombok.Data;
import lombok.EqualsAndHashCode;

import java.util.Arrays;

/**
 * author: suvera
 * date: 10/17/2020 12:46 AM
 */
@SuppressWarnings("unused")
@EqualsAndHashCode(callSuper = true)
@Data
public class SpConfigDefinition extends AttributeSet {
    private static final SpConfigDefinition instance = new SpConfigDefinition();

    public static SpConfigDefinition getInstance() {
        return instance;
    }

    private SpConfigDefinition() {
        addAttribute(Attribute.of("documentationUri")
                .setDescription("An HTTP-addressable URL pointing to the service provider's human-consumable help documentation.")
                .setType("reference")
                .setCaseExact(false)
                .setMultiValued(false)
                .setMutability("readOnly")
                .setRequired(false)
                .setReturned("default")
                .setUniqueness("none")
        );

        addAttribute(Attribute.of("patch")
                .setDescription("A complex type that specifies PATCH configuration options.")
                .setType("complex")
                .setCaseExact(false)
                .setMultiValued(false)
                .setMutability("readOnly")
                .setRequired(true)
                .setReturned("default")
                .setUniqueness("none")
                .addSubAttribute(Attribute.of("supported")
                        .setDescription("A Boolean value specifying whether or not the operation is supported.")
                        .setType("boolean")
                        .setCaseExact(false)
                        .setMultiValued(false)
                        .setMutability("readOnly")
                        .setRequired(true)
                        .setReturned("default")
                        .setUniqueness("none")
                )
        );

        addAttribute(Attribute.of("bulk")
                .setDescription("A complex type that specifies bulk configuration options.")
                .setType("complex")
                .setCaseExact(false)
                .setMultiValued(false)
                .setMutability("readOnly")
                .setRequired(true)
                .setReturned("default")
                .setUniqueness("none")
                .addSubAttribute(Attribute.of("supported")
                        .setDescription("A Boolean value specifying whether or not the operation is supported.")
                        .setType("boolean")
                        .setCaseExact(false)
                        .setMultiValued(false)
                        .setMutability("readOnly")
                        .setRequired(true)
                        .setReturned("default")
                        .setUniqueness("none")
                )
                .addSubAttribute(Attribute.of("maxOperations")
                        .setDescription("An integer value specifying the maximum number of operations.")
                        .setType("integer")
                        .setCaseExact(false)
                        .setMultiValued(false)
                        .setMutability("readOnly")
                        .setRequired(true)
                        .setReturned("default")
                        .setUniqueness("none")
                )
                .addSubAttribute(Attribute.of("maxPayloadSize")
                        .setDescription("An integer value specifying the maximum payload size in bytes.")
                        .setType("integer")
                        .setCaseExact(false)
                        .setMultiValued(false)
                        .setMutability("readOnly")
                        .setRequired(true)
                        .setReturned("default")
                        .setUniqueness("none")
                )
        );

        addAttribute(Attribute.of("filter")
                .setDescription("A complex type that specifies FILTER options.")
                .setType("complex")
                .setCaseExact(false)
                .setMultiValued(false)
                .setMutability("readOnly")
                .setRequired(true)
                .setReturned("default")
                .setUniqueness("none")
                .addSubAttribute(Attribute.of("supported")
                        .setDescription("A Boolean value specifying whether or not the operation is supported.")
                        .setType("boolean")
                        .setCaseExact(false)
                        .setMultiValued(false)
                        .setMutability("readOnly")
                        .setRequired(true)
                        .setReturned("default")
                        .setUniqueness("none")
                )
                .addSubAttribute(Attribute.of("maxResults")
                        .setDescription("An integer value specifying the maximum number of resources returned in a response.")
                        .setType("integer")
                        .setCaseExact(false)
                        .setMultiValued(false)
                        .setMutability("readOnly")
                        .setRequired(true)
                        .setReturned("default")
                        .setUniqueness("none")
                )
        );

        addAttribute(Attribute.of("changePassword")
                .setDescription("A complex type that specifies configuration options related to changing a password.")
                .setType("complex")
                .setCaseExact(false)
                .setMultiValued(false)
                .setMutability("readOnly")
                .setRequired(true)
                .setReturned("default")
                .setUniqueness("none")
                .addSubAttribute(Attribute.of("supported")
                        .setDescription("A Boolean value specifying whether or not the operation is supported.")
                        .setType("boolean")
                        .setCaseExact(false)
                        .setMultiValued(false)
                        .setMutability("readOnly")
                        .setRequired(true)
                        .setReturned("default")
                        .setUniqueness("none")
                )
        );

        addAttribute(Attribute.of("sort")
                .setDescription("A complex type that specifies sort configuration options.")
                .setType("complex")
                .setCaseExact(false)
                .setMultiValued(false)
                .setMutability("readOnly")
                .setRequired(true)
                .setReturned("default")
                .setUniqueness("none")
                .addSubAttribute(Attribute.of("supported")
                        .setDescription("A Boolean value specifying whether or not the operation is supported.")
                        .setType("boolean")
                        .setCaseExact(false)
                        .setMultiValued(false)
                        .setMutability("readOnly")
                        .setRequired(true)
                        .setReturned("default")
                        .setUniqueness("none")
                )
        );

        addAttribute(Attribute.of("etag")
                .setDescription("A complex type that specifies etag configuration options.")
                .setType("complex")
                .setCaseExact(false)
                .setMultiValued(false)
                .setMutability("readOnly")
                .setRequired(true)
                .setReturned("default")
                .setUniqueness("none")
                .addSubAttribute(Attribute.of("supported")
                        .setDescription("A Boolean value specifying whether or not the operation is supported.")
                        .setType("boolean")
                        .setCaseExact(false)
                        .setMultiValued(false)
                        .setMutability("readOnly")
                        .setRequired(true)
                        .setReturned("default")
                        .setUniqueness("none")
                )
        );

        addAttribute(Attribute.of("authenticationSchemes")
                .setDescription("A multi-valued complex type that specifies supported authentication scheme properties.")
                .setType("complex")
                .setCaseExact(false)
                .setMultiValued(true)
                .setMutability("readOnly")
                .setRequired(true)
                .setReturned("default")
                .setUniqueness("none")
                .addSubAttribute(Attribute.of("type")
                        .setDescription("Specifies the type of the authentication scheme")
                        .setType("string")
                        .setCaseExact(false)
                        .setMultiValued(false)
                        .setMutability("readOnly")
                        .setRequired(true)
                        .setReturned("default")
                        .setUniqueness("none")
                        .setCanonicalValues(Arrays.asList("oauth2", "httpbasic"))
                )
                .addSubAttribute(Attribute.of("name")
                        .setDescription("The common authentication scheme name, e.g., HTTP Basic.")
                        .setType("string")
                        .setCaseExact(false)
                        .setMultiValued(false)
                        .setMutability("readOnly")
                        .setRequired(true)
                        .setReturned("default")
                        .setUniqueness("none")
                )
                .addSubAttribute(Attribute.of("description")
                        .setDescription("A description of the authentication scheme.")
                        .setType("string")
                        .setCaseExact(false)
                        .setMultiValued(false)
                        .setMutability("readOnly")
                        .setRequired(true)
                        .setReturned("default")
                        .setUniqueness("none")
                )
                .addSubAttribute(Attribute.of("specUri")
                        .setDescription("An HTTP-addressable URL pointing to the authentication scheme's specification.")
                        .setType("reference")
                        .setCaseExact(false)
                        .setMultiValued(false)
                        .setMutability("readOnly")
                        .setRequired(false)
                        .setReturned("default")
                        .setUniqueness("none")
                )
                .addSubAttribute(Attribute.of("documentationUri")
                        .setDescription("An HTTP-addressable URL pointing to the authentication scheme's usage documentation.")
                        .setType("reference")
                        .setCaseExact(false)
                        .setMultiValued(false)
                        .setMutability("readOnly")
                        .setRequired(false)
                        .setReturned("default")
                        .setUniqueness("none")
                )
                .addSubAttribute(Attribute.of("primary")
                        .setDescription("A boolean indicates whether this authentication schema is primary")
                        .setType("boolean")
                        .setCaseExact(false)
                        .setMultiValued(false)
                        .setMutability("readOnly")
                        .setRequired(false)
                        .setReturned("default")
                        .setUniqueness("none")
                )
        );

    }
}
